name: Python CI with Docker

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub using GitHub Secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Set up Docker Buildx (for caching and multi-platform builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Cache Docker layers for faster builds
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: .devcontainer/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest
          ${{ secrets.DOCKER_USERNAME }}/my-python-app:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    # Run Unit Tests inside Docker container
    - name: Run Unit Tests
      run: |
        docker run --rm -v ${{ github.workspace }}:/app -w /app ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest pytest


    # Optional: Run a Python script using Docker
    - name: Run Python Script
      run: |
        docker run --rm ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest python my_script.py
